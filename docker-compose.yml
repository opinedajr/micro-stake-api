version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: micro_stake_postgres
    environment:
      POSTGRES_USER: micro_stake_user
      POSTGRES_PASSWORD: micro_stake_password
      POSTGRES_DB: micro_stake_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - micro_stake_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U micro_stake_user -d micro_stake_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: micro_stake_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - micro_stake_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: micro_stake_api
    ports:
      - "8080:8080"
    environment:
      - ENV=production
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - micro_stake_network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  micro_stake_network:
    driver: bridge
